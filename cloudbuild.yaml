substitutions:
  _PROJECT_ID: fluid-crane-466321-m5
  _REGION: europe-west10
  _REPO: karas_chan
  _DOCKER_REPO: karas-chan  
  _API_IMAGE: backend
  _FRONTEND_IMAGE: frontend

steps:
  # Build & push API
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_API_IMAGE}:latest', 
      './Backend'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_DOCKER_REPO}/${_API_IMAGE}:latest'
    ]

  # Build & push Frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_FRONTEND_IMAGE}:latest', 
      './Frontend'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_DOCKER_REPO}/${_FRONTEND_IMAGE}:latest'
    ]

  # Deploy API
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'api-service',
      '--image', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_API_IMAGE}:latest',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--set-env-vars', 
      'NODE_ENV=production,PORT=3000,DATABASE_URL=${_DATABASE_URL},TOKEN_ISSUER=${_TOKEN_ISSUER},JWT_SECRET=${_JWT_SECRET},JWT_KEY=${_JWT_KEY}'
    ]

  # Deploy Frontend
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', 'frontend-service',
      '--image', '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO}/${_FRONTEND_IMAGE}:latest',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--set-env-vars', 'API_BASE_URL=${_API_BASE_URL}'
    ]

options:
  logging: CLOUD_LOGGING_ONLY
